apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: webapp
spec:
  replicas: 4
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - image: nginx:alpine
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: webapp
spec:
  ports:
  - port: 80
  selector:
    app: webapp

---

apiVersion: certmanager.k8s.io/v1alpha1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: your-email@example.org
    privateKeySecretRef:
      name: letsencrypt-staging
    http01: {}

---

apiVersion: certmanager.k8s.io/v1alpha1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: your-email@example.org
    privateKeySecretRef:
      name: letsencrypt-prod
    http01: {}

---

apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: tls-secret
  #name: tls-secret-prod
spec:
  secretName: tls-secret-staging
  #secretName: tls-secret-prod
  dnsNames:
  - your-website.example.org
  acme:
    config:
    - http01:
        ingressClass: nginx
      domains:
      - your-website.example.org
  issuerRef:
    kind: ClusterIssuer

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: api-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-staging
    #certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - hosts:
    -  your-website.example.org
    secretName: tls-secret-staging
    #secretName: tls-secret-prod
  rules:
  - host: your-website.example.org
    http:
      paths:
      - path: /
        backend:
          serviceName: webapp
          servicePort: 80

